/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b4b38038062000b4b8339818101604052810190620000379190620002ec565b8360029081620000489190620005dd565b5082600390816200005a9190620005dd565b5081600460006101000a81548160ff021916908360ff1602179055506200008833826200009260201b60201c565b50505050620006c4565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001819055505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200014982620000fe565b810181811067ffffffffffffffff821117156200016b576200016a6200010f565b5b80604052505050565b600062000180620000e0565b90506200018e82826200013e565b919050565b600067ffffffffffffffff821115620001b157620001b06200010f565b5b620001bc82620000fe565b9050602081019050919050565b60005b83811015620001e9578082015181840152602081019050620001cc565b60008484015250505050565b60006200020c620002068462000193565b62000174565b9050828152602081018484840111156200022b576200022a620000f9565b5b62000238848285620001c9565b509392505050565b600082601f830112620002585762000257620000f4565b5b81516200026a848260208601620001f5565b91505092915050565b600060ff82169050919050565b6200028b8162000273565b81146200029757600080fd5b50565b600081519050620002ab8162000280565b92915050565b6000819050919050565b620002c681620002b1565b8114620002d257600080fd5b50565b600081519050620002e681620002bb565b92915050565b60008060008060808587031215620003095762000308620000ea565b5b600085015167ffffffffffffffff8111156200032a5762000329620000ef565b5b620003388782880162000240565b945050602085015167ffffffffffffffff8111156200035c576200035b620000ef565b5b6200036a8782880162000240565b93505060406200037d878288016200029a565b92505060606200039087828801620002d5565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003ef57607f821691505b602082108103620004055762000404620003a7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200046f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000430565b6200047b868362000430565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620004be620004b8620004b284620002b1565b62000493565b620002b1565b9050919050565b6000819050919050565b620004da836200049d565b620004f2620004e982620004c5565b8484546200043d565b825550505050565b600090565b62000509620004fa565b62000516818484620004cf565b505050565b5b818110156200053e5762000532600082620004ff565b6001810190506200051c565b5050565b601f8211156200058d5762000557816200040b565b620005628462000420565b8101602085101562000572578190505b6200058a620005818562000420565b8301826200051b565b50505b505050565b600082821c905092915050565b6000620005b26000198460080262000592565b1980831691505092915050565b6000620005cd83836200059f565b9150826002028217905092915050565b620005e8826200039c565b67ffffffffffffffff8111156200060457620006036200010f565b5b620006108254620003d6565b6200061d82828562000542565b600060209050601f83116001811462000655576000841562000640578287015190505b6200064c8582620005bf565b865550620006bc565b601f19841662000665866200040b565b60005b828110156200068f5784890151825560018201915060208501945060208101905062000668565b86831015620006af5784890151620006ab601f8916826200059f565b8355505b6001600288020188555050505b505050505050565b61047780620006d46000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806370a082311461003b578063a9059cbb1461006b575b600080fd5b61005560048036038101906100509190610260565b610087565b60405161006291906102a6565b60405180910390f35b610085600480360381019061008091906102ed565b6100cf565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161014f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101469061038a565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461019d91906103d9565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f2919061040d565b925050819055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061022d82610202565b9050919050565b61023d81610222565b811461024857600080fd5b50565b60008135905061025a81610234565b92915050565b600060208284031215610276576102756101fd565b5b60006102848482850161024b565b91505092915050565b6000819050919050565b6102a08161028d565b82525050565b60006020820190506102bb6000830184610297565b92915050565b6102ca8161028d565b81146102d557600080fd5b50565b6000813590506102e7816102c1565b92915050565b60008060408385031215610304576103036101fd565b5b60006103128582860161024b565b9250506020610323858286016102d8565b9150509250929050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061037460148361032d565b915061037f8261033e565b602082019050919050565b600060208201905081810360008301526103a381610367565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103e48261028d565b91506103ef8361028d565b9250828203905081811115610407576104066103aa565b5b92915050565b60006104188261028d565b91506104238361028d565b925082820190508082111561043b5761043a6103aa565b5b9291505056fea2646970667358221220555dfad63e198b7f15e36b0b8791d8f4d26860fc801dfd57106a077c605a089764736f6c63430008180033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals,
      totalSupply,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    totalSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimals,
      totalSupply,
      overrides || {}
    ) as Promise<
      ERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20__factory {
    return super.connect(runner) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20 {
    return new Contract(address, _abi, runner) as unknown as ERC20;
  }
}
